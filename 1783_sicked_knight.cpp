/*
	n == 1일 때 이동할 수 없으므로 1을 출력한다.
	n == 2일 때 오른쪽으로 두 칸씩만 이동할 수 있다.
	최대 세 번 움직여 총 4칸을 방문한다.
	X X O X X
	O X X X O
	m+1 / 2 만큼이 이동할 수 있는 칸 수인데, m이 7이상일 때 부터는
	항상 4칸밖에 방문하지 못한다. 4번 이상 이동하려면 4가지 방법을 모두 써야하는데
	2줄 상태에서는 4가지 방법 중 2가지 방법을 사용하지 못하기 때문이다. 
	X O X X X X X O X O
	X X X X O X X X X X
	O X O X X X O X O X

	X O X X X X
	X X X X O X
	O X O X X X 
	n >= 3일 때는 4가지 방법을 모두 사용할 수 있다. 3칸이건 100칸이건
	오른쪽으로 이동할때 밑으로 내려가면서 이동하든 지그재그로 이동하든
	방법의 수는 똑같기 때문에 n == 3이나 n==100이나 경우의 수는 똑같다.
	단, m <= 6이면 4가지 방법을 다 사용하지 못하기 때문에
	최대 4칸을 갈 수 있고, m <= 3이 되는 순간 m과 같은 칸의 수 만큼 이동할 수 있다.
	m >= 7이면 4가지 방법을 모두 쓸 수 있으므로 한 가지 방법씩 다 쓰면
	5칸이 되고, 그 후 한 열씩 늘어날 때마다 갈 수 있는 칸 수가 하나씩 늘어난다.
	즉, m-2칸 만큼 방문할 수 있다.  
*/

#include <iostream>

using namespace std;

int n, m;

int main(void) {
	cin >> n >> m;
	if(n == 1) cout << 1;
	else if(n == 2) {
		if(m >= 7) cout << 4;
		else cout << (m+1) / 2;
	}
	else {
		if(m <= 6) {
			cout << min(m, 4);
		}
		else {
			cout << m-2;
		}
	}
	return 0;
}
